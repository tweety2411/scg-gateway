server:
  port: 8765

eureka:
  client:
    fetch-registry: true
    defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: scg-gateway
  cloud:
    gateway:
      routes:
        - id: prod-svc
          uri: lb://PROD-SVC
          predicates:
          - Path=/prod/**
          filters:
            - name: CircuitBreaker
              args:
                name: scgCircuitBreaker
                fallbackUri: forward:/fallback
        - id: test-svc
          uri: lb://TEST-SVC
          predicates:
          - Path=/testSvc/**
          filters:
            - name: CircuitBreaker
              args:
                name: testCircuitBreaker
                fallbackUri: forward:/fallback

resilience4j.circuitbreaker:
  configs:
    default:
      failureRateThreshold: 50
      slowCallRateThreshold: 100
      slowCallDurationThreshold: 60000
      permittedNumberOfCallsInHalfOpenState: 4
      maxWaitDurationInHalfOpenState: 1000
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      waitDurationInOpenState: 10000
      registerHealthIndicator: true
      recordExceptions: java.util.concurrent.TimeoutException
    #  eventConsumerBufferSize: 10

  instances:
    prod-svc:
      registerHealthIndicator: true
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 3

    test:
      baseConfig: default

    test-svc:
      baseConfig: default

resilience4j.timelimiter:
  configs:
    default:
      timeoutDuration: 3s
  instances:
    prod-svc:
      timeDuration: 3s
      cancelRunningFuture: true

management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      showDetails: always
    metrics:
      enabled: true
    gateway:
      enabled: true

  endpoints:
    web:
      exposure:
        include: '*'

  metrics:
    enable:
      resilience4j:
        circuitbreaker:
          calls: true
